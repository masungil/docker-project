name: 빌드 및 배포 

on:
  push:
    branches: [ main ]

env:
  USERNAME: masungil

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: 원격저장소에서 소스를 복사
        uses: actions/checkout@v3

      - name: 소스파일을 docker이미지로 빌드한다
        run: |
          cd backend
          docker build -t ${{env.USERNAME}}/backend:latest .
      
      - name: docker hub에 로그인을 한다
        run: docker login -u ${{env.USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: 생성된 이미지를 docker hub에 push 한다
        run: docker push ${{env.USERNAME}}/backend:latest

      - name: 개인키 인증서 파일 생성 
        run: |
          ls -la
          mkdir -p ~/.ssh
          ls ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ls ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ls -la ~/.ssh/id_rsa
          ssh-keyscan -t ed25519 54.180.101.131 >> ~/.ssh/known_hosts
          ssh-keyscan -t rsa 54.180.101.131 >> ~/.ssh/known_hosts
          ls -la  ~/.ssh/known_hosts
          ls -la  ../frontend/index.html
          scp ../frontend/index.html ubuntu@54.180.101.131:~/step3/frontend
  deploy:
    needs: build-docker-image
    name: deploy
    runs-on: [ self-hosted, label-kosa2]
    steps:
      - name: docker hub에 로그인을 한다
        run: docker login -u ${{env.USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: 서비스 실행
        run: |
          cd /home/ubuntu/step3
          docker compose up -d 
          #ehco '운영서버에서 github에 파일 복사해 옴'
          #git clone https://github.com/masungil/docker-project
          #cp docker-project/frontend/index.html frontend
          #rm -rf docker-project
